{"version":3,"sources":["components/Navbar/Navbar.js","pages/Landing/Landing.js","pages/work/Work.js","pages/contact/Contact.js","pages/About/About.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","console","log","className","to","location","pathname","class","href","target","rel","Landing","id","type","value","work","src","alt","Contact","placeholder","name","About","App","exact","path","component","Work","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.902c21ac.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <Fragment>\r\n      <nav className='navbar'>\r\n        <ul className='nav'>\r\n          <li>\r\n            <Link to='/'>\r\n              <span className={props.location.pathname === '/' ? 'active' : ''}>\r\n                <i class='fas fa-laptop-code'></i>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/work'>\r\n              <span className={props.location.pathname === '/work' ? 'active' : ''}>\r\n                Work\r\n              </span>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/contact-me'>\r\n              <span className={props.location.pathname === '/contact-me' ? 'active' : ''}>\r\n                Say Hello\r\n              </span>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/about'>\r\n              <span className={props.location.pathname === '/about' ? 'active' : ''}>\r\n                About\r\n              </span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className='nav-right'>\r\n          <li>\r\n            <a\r\n              href='https://www.linkedin.com/in/iyadh-hakiri-83b5b31a1/'\r\n              target='_blank'\r\n              rel='noopener noreferrer'>\r\n              <i className='fab fa-linkedin-in'></i>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href='https://github.com/iyadhhk'\r\n              target='_blank'\r\n              rel='noopener noreferrer'>\r\n              <i className='fab fa-github'></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Landing.css';\r\nconst Landing = () => {\r\n  return (\r\n    <div className='main'>\r\n      <h1>Hi, I'm Iyadh.</h1>\r\n      <p>I'm a fullstack javaScript developer.</p>\r\n      <div className='input-container'>\r\n        <Link to='/work'>\r\n          <input id='work' type='button' value='SEE WORK' />\r\n        </Link>\r\n        <Link to='/contact-me'>\r\n          <input type='button' value='GET IN TOUCH' />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport './Work.css';\r\nfunction work() {\r\n  return (\r\n    <div className='my-work'>\r\n      <h1>My Projects.</h1>\r\n      <div className='project'>\r\n        <div className='item'>\r\n          <img src='/about.jpg' alt='dd' />\r\n        </div>\r\n        <div className='item-info'>\r\n          <p>Title :</p>\r\n          <p>Description :</p>\r\n          <p>Frontend :</p>\r\n          <p>Backend :</p>\r\n        </div>\r\n      </div>\r\n      <div className='project'>\r\n        <div className='item'>\r\n          <img src='/about.jpg' alt='dd' />\r\n        </div>\r\n        <div className='item-info'>\r\n          <p>Title :</p>\r\n          <p>Description :</p>\r\n          <p>Frontend :</p>\r\n          <p>Backend :</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default work;\r\n","import React from 'react';\r\nimport './Contact.css';\r\nconst Contact = () => {\r\n  return (\r\n    <div className='contact'>\r\n      <div className='text-lead'>\r\n        <p className='text-top'>Want to</p>\r\n        <p className='text-middle'>\r\n          Start a <span className='high-text'>New Project</span>\r\n        </p>\r\n        <p className='text-middle'>\r\n          or just say <span className='high-text'>Hello</span>\r\n        </p>\r\n        <p className='low-text'>Email: iyadhbox@gmail.com</p>\r\n      </div>\r\n      <div className='contact-form'>\r\n        <p className='title-black'>Contact Me</p>\r\n\r\n        <div className='form-group'>\r\n          <label>YOUR NAME :</label>\r\n          <input className='about-input' type='text' placeholder='fullname' />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>YOUR EMAIL :</label>\r\n          <input className='about-input' type='text' placeholder='exemple@email.com' />\r\n        </div>\r\n        <div className='form-group-text'>\r\n          <label>YOUR MESSAGE</label>\r\n          <textarea name='message' placeholder='message'></textarea>\r\n        </div>\r\n        <input className='submit-input' type='submit' value='SEND MESSAGE' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className='about'>\r\n      <div className='content-about'>\r\n        <h1>Who I am.</h1>\r\n        <p>I'm Iyadh Hakiri, a javascript developer</p>\r\n      </div>\r\n\r\n      <div className='card'>\r\n        <div className='card-left'>\r\n          <p className='black-text'>FULL</p>\r\n          <p className='front-end'>FrontEnd</p>\r\n          <p className='skill'>React</p>\r\n          <p className='skill'>HTML</p>\r\n          <p className='skill'>CSS</p>\r\n          <p className='skill'>JAVASCRIPT</p>\r\n        </div>\r\n        <div className='card-right'>\r\n          <p className='white-text'>STACK</p>\r\n          <p className='back-end'>BackEnd</p>\r\n          <p className='skill'>NodeJs</p>\r\n          <p className='skill'>Express</p>\r\n          <p className='skill'>MongoDB</p>\r\n          <p className='skill'>MySQL</p>\r\n          <p className='skill'>REST API</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Landing from './pages/Landing/Landing';\nimport Work from './pages/work/Work';\nimport Contact from './pages/contact/Contact';\nimport About from './pages/About/About';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction App(props) {\n  console.log(props);\n  return (\n    <div className='app'>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/work' component={Work} />\n        <Route exact path='/contact-me' component={Contact} />\n        <Route exact path='/about' component={About} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}